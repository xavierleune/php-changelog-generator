name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.3', '8.4']
        dependencies: ['lowest', 'highest']
        
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl
          coverage: xdebug
          
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.dependencies }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependencies }}-
          
      - name: Install dependencies (lowest)
        if: matrix.dependencies == 'lowest'
        run: composer update --prefer-lowest --no-interaction --no-progress
        
      - name: Install dependencies (highest)
        if: matrix.dependencies == 'highest'
        run: composer install --no-interaction --no-progress
        
      - name: Run tests
        run: composer test
        
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse src/ --level=1
        
      - name: Check code standards
        run: composer cs-check

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl
          coverage: xdebug
          
      - name: Install dependencies
        run: composer install --no-interaction --no-progress
        
      - name: Run tests with coverage
        run: ./vendor/bin/phpunit --coverage-clover=coverage.xml
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false